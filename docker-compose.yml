version: '3.7'

networks:
  default:
    external: true
    name: flink-enrich

services:
  jobmanager:
    image: flink:1.15.0-scala_2.12-java11
    container_name: jobmanager
    ports:
      - "8081:8081"
      - "6123:6123"
      - "6124:6124"
      - "6125:6125"
    healthcheck:
      test: curl --fail http://localhost:8081/overview
      interval: 15s
      timeout: 5s
      retries: 30
      start_period: 0s
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager

  taskmanager:
    image: flink:1.15.0-scala_2.12-java11
    depends_on:
      - jobmanager
    command: taskmanager
    healthcheck:
      test: exit 0
      interval: 15s
      timeout: 5s
      retries: 30
      start_period: 5s
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 10
        parallelism.default: 2
        taskmanager.memory.network.max: 268435460b
        taskmanager.memory.network.min: 268435460b
        taskmanager.memory.network.fraction: .4
        cluster.evenly-spread-out-slots: true

  job_submit:
    build:
      context: ./
      dockerfile: Dockerfile.local
    depends_on:
      - taskmanager
      - cassandra
      - kafdrop
    environment:
      - |
        JOBS_TO_SUBMIT=
        ProductEnrich

  cassandra:
    image: cassandra:4.0
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=flink-enrich

  cqlsh:
    image: cassandra:4.0
    entrypoint: cqlsh cassandra
    volumes:
      - ./docker/cassandra/schema.cql:/schema.cql

  zookeeper:
    container_name: zookeeper
    restart: always
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
      - ./docker/kafka/mock:/mock

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.3.0
    restart: always
    hostname: kafka
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data
      - ./docker/kafka/mock:/mock
    depends_on:
      - zookeeper

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:19091"
    depends_on:
      - kafka